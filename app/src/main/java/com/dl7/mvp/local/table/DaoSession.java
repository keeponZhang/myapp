package com.dl7.mvp.local.table;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import java.util.Map;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
//关于DaoSession实例，GreenDAO官方建议不要重新创建新的实例，保持一个单例的引用即可
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig beautyPhotoInfoDaoConfig;
    private final DaoConfig danmakuInfoDaoConfig;
    private final DaoConfig newsTypeInfoDaoConfig;
    private final DaoConfig videoInfoDaoConfig;

    private final BeautyPhotoInfoDao beautyPhotoInfoDao;
    private final DanmakuInfoDao danmakuInfoDao;
    private final NewsTypeInfoDao newsTypeInfoDao;
    private final VideoInfoDao videoInfoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        beautyPhotoInfoDaoConfig = daoConfigMap.get(BeautyPhotoInfoDao.class).clone();
        beautyPhotoInfoDaoConfig.initIdentityScope(type);

        danmakuInfoDaoConfig = daoConfigMap.get(DanmakuInfoDao.class).clone();
        danmakuInfoDaoConfig.initIdentityScope(type);

        newsTypeInfoDaoConfig = daoConfigMap.get(NewsTypeInfoDao.class).clone();
        newsTypeInfoDaoConfig.initIdentityScope(type);

        videoInfoDaoConfig = daoConfigMap.get(VideoInfoDao.class).clone();
        videoInfoDaoConfig.initIdentityScope(type);

        beautyPhotoInfoDao = new BeautyPhotoInfoDao(beautyPhotoInfoDaoConfig, this);
        danmakuInfoDao = new DanmakuInfoDao(danmakuInfoDaoConfig, this);
        newsTypeInfoDao = new NewsTypeInfoDao(newsTypeInfoDaoConfig, this);
        videoInfoDao = new VideoInfoDao(videoInfoDaoConfig, this);

        registerDao(BeautyPhotoInfo.class, beautyPhotoInfoDao);
        registerDao(DanmakuInfo.class, danmakuInfoDao);
        registerDao(NewsTypeInfo.class, newsTypeInfoDao);
        registerDao(VideoInfo.class, videoInfoDao);
    }
    
    public void clear() {
        beautyPhotoInfoDaoConfig.clearIdentityScope();
        danmakuInfoDaoConfig.clearIdentityScope();
        newsTypeInfoDaoConfig.clearIdentityScope();
        videoInfoDaoConfig.clearIdentityScope();
    }

    public BeautyPhotoInfoDao getBeautyPhotoInfoDao() {
        return beautyPhotoInfoDao;
    }

    public DanmakuInfoDao getDanmakuInfoDao() {
        return danmakuInfoDao;
    }

    public NewsTypeInfoDao getNewsTypeInfoDao() {
        return newsTypeInfoDao;
    }

    public VideoInfoDao getVideoInfoDao() {
        return videoInfoDao;
    }

}
